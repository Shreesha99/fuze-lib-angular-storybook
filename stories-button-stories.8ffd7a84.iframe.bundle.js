"use strict";(self.webpackChunkfuze_lib_storybook=self.webpackChunkfuze_lib_storybook||[]).push([[791],{"./src/stories/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LargeButton:()=>LargeButton,PrimaryButton:()=>PrimaryButton,SecondaryButton:()=>SecondaryButton,SmallButton:()=>SmallButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Library/Button",component:__webpack_require__("./node_modules/fuze-lib-angular/fesm2022/fuze-lib.mjs").Qp,tags:["autodocs"],argTypes:{backgroundColor:{control:"color"},onClick:{action:"clicked"},borderRadius:{control:"text"}},parameters:{docs:{description:{component:'\n          The Button Component is a versatile component that supports various states and styles.\n          \n          Features\n          - Customizable size: `small`, `medium`, `large`\n          - Primary and secondary styling\n          - Disabled state\n          - Supports background color customization via `backgroundColor` prop.\n          - Border radius customization via `borderRadius` prop.\n          \n          Usage Example\n          <lib-button \n            [primary]="true"\n            [size]="\'large\'"\n            [backgroundColor]="\'#DC3E4E\'"\n            [borderRadius]="\'0.5em\'"\n            (onClick)="handleClick($event)">\n            Primary Button\n          </lib-button>\n        '}}}},Template=args=>({props:{...args,onClick:event=>args.onClick&&args.onClick(event)}}),Default=Template.bind({});Default.args={label:"Click me",primary:!0,size:"medium",backgroundColor:"#DC3E4E",borderRadius:"1em",disabled:!1};const PrimaryButton=Template.bind({});PrimaryButton.args={label:"Primary Button",primary:!0,size:"medium",backgroundColor:"#DC3E4E",borderRadius:"1em",disabled:!1};const SecondaryButton=Template.bind({});SecondaryButton.args={label:"Secondary Button",primary:!1,size:"medium",backgroundColor:"transparent",borderRadius:"1em",disabled:!1};const LargeButton=Template.bind({});LargeButton.args={label:"Large Button",primary:!0,size:"large",backgroundColor:"#DC3E4E",borderRadius:"1em",disabled:!1};const SmallButton=Template.bind({});SmallButton.args={label:"Small Button",primary:!0,size:"small",backgroundColor:"#DC3E4E",borderRadius:"1em",disabled:!1};const __namedExportsOrder=["Default","PrimaryButton","SecondaryButton","LargeButton","SmallButton"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: {\n    ...args,\n    onClick: (event: Event) => args.onClick && args.onClick(event)\n  }\n})",...Default.parameters?.docs?.source}}},PrimaryButton.parameters={...PrimaryButton.parameters,docs:{...PrimaryButton.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: {\n    ...args,\n    onClick: (event: Event) => args.onClick && args.onClick(event)\n  }\n})",...PrimaryButton.parameters?.docs?.source}}},SecondaryButton.parameters={...SecondaryButton.parameters,docs:{...SecondaryButton.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: {\n    ...args,\n    onClick: (event: Event) => args.onClick && args.onClick(event)\n  }\n})",...SecondaryButton.parameters?.docs?.source}}},LargeButton.parameters={...LargeButton.parameters,docs:{...LargeButton.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: {\n    ...args,\n    onClick: (event: Event) => args.onClick && args.onClick(event)\n  }\n})",...LargeButton.parameters?.docs?.source}}},SmallButton.parameters={...SmallButton.parameters,docs:{...SmallButton.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: {\n    ...args,\n    onClick: (event: Event) => args.onClick && args.onClick(event)\n  }\n})",...SmallButton.parameters?.docs?.source}}}}}]);