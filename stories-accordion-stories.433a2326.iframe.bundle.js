(self.webpackChunkfuze_lib_storybook=self.webpackChunkfuze_lib_storybook||[]).push([[463],{"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./src/stories/accordion.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>accordion_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),accordionngResource=__webpack_require__("./src/stories/accordion.css?ngResource"),accordionngResource_default=__webpack_require__.n(accordionngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs");let AccordionComponent=class AccordionComponent{itemCount=3;isOpen=!1;accordionItems=[];ngOnChanges(changes){(changes.itemCount||changes.isOpen)&&this.generateAccordionItems()}generateAccordionItems(){this.accordionItems=Array.from({length:this.itemCount},((_,index)=>({title:`Item ${index+1}`,content:`Content for Item ${index+1}`,isOpen:this.isOpen})))}toggle(item){item.isOpen=!item.isOpen}static propDecorators={itemCount:[{type:core.Input}],isOpen:[{type:core.Input}]}};AccordionComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"lib-accordion",standalone:!0,imports:[common.CommonModule],template:'\n    <div class="accordion">\n      <div\n        *ngFor="let item of accordionItems; let i = index"\n        class="accordion-item"\n        [class.open]="item.isOpen"\n      >\n        <div class="accordion-header" (click)="toggle(item)">\n          <h5>{{ item.title }}</h5>\n        </div>\n        <div *ngIf="item.isOpen" class="accordion-body">\n          <p>{{ item.content }}</p>\n        </div>\n      </div>\n    </div>\n  ',styles:[accordionngResource_default()]})],AccordionComponent);const accordion_stories={title:"Library/Accordion",component:AccordionComponent,tags:["autodocs"],parameters:{docs:{description:{component:'\nThe **Accordion Component** allows users to view sections of content in a collapsible panel format. This component supports dynamic addition of new accordion items and handles toggle functionality.\n\n### Features\n- **Customizable accordion items**: Each accordion item can have its own title and content.\n- **Toggle functionality**: Users can expand or collapse items by clicking the header.\n- **Dynamic addition**: New accordion items can be added by specifying the `itemCount` input property.\n- **Open/Close state**: The `isOpen` input property controls whether the items are open by default.\n\n### Usage Example\n```html\n<lib-accordion [itemCount]="5" [isOpen]="true"></lib-accordion>\n```\n        '}}}},Default=(args=>({component:AccordionComponent,props:args})).bind({});Default.args={itemCount:3,isOpen:!1};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => ({\n  component: AccordionComponent,\n  props: args\n})",...Default.parameters?.docs?.source}}}},"./src/stories/accordion.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/* Accordion Styles */\n.accordion {\n    border-radius: 5px;\n    overflow: hidden;\n    font-family: 'Montserrat', 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n  \n  .accordion-item {\n    transition: all 0.3s ease;\n  }\n  \n  .accordion-header {\n    background-color: #DC3E4E; /* Using the red color from the dropdown */\n    padding: 10px;\n    cursor: pointer;\n    font-weight: 700;\n    color: white;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 0.7rem;\n    border-radius: 0.5em;\n  }\n  \n  .accordion-header:hover {\n    background-color: #b31c2d; \n  }\n  \n  .accordion-body {\n    padding: 15px;\n    background-color: #fff;\n    display: none;\n  }\n  \n  .accordion-item.open .accordion-body {\n    display: block;\n  }\n  \n  .accordion-item h5 {\n    margin: 0;\n    font-size: 0.8rem;\n  }\n  \n  .accordion-item.open .accordion-header {\n    background-color: #a81424; /* Using a deeper red color for the open state */\n  }\n  ",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);